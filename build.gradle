import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'net.minecraftforge.gradle'

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

version = mod_version
group = "com.github.logictechcorp"
archivesBaseName = "${mod_name}-${minecraft_version}"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    main.resources {
        srcDirs += 'src/main/generated_resources'
        exclude '.cache'
    }
}

minecraft {
    mappings channel: "snapshot", version: "${mcp_version}"

    accessTransformer = file("/src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file('run')

            mods {
                NetherEx {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            mods {
                NetherEx {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            mods {
                NetherEx {
                    source sourceSets.main
                }
            }
            args '--mod', 'netherex', '--all', '--output', file('src/main/generated_resources/'), '--input', file('src/main/resources')
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compile files('libs/LibraryEx.jar')
}

jar {
    exclude "**/*.bat"

    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "LogicTechCorp",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${mod_name}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "LogicTechCorp",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task processDevResources(type: Copy) {
    destinationDir = ((Copy) project.tasks.getByName("processResources")).getDestinationDir()
    from(sourceSets.main.resources.srcDirs) {
        filter tokens: ["file.jarVersion": project.version as String], beginToken: "\${", endToken: "}", ReplaceTokens
    }
}

build {
    dependsOn(processDevResources)
}